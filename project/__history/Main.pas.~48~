unit Main;

interface //#################################################################### Å°

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Objects,
  Core, FMX.Controls.Presentation, FMX.StdCtrls, LUX, LUX.D2, FMX.ListBox;
  const
    CheckBoxNum = 3;

type
   TMouse = record
     public
       Drag         :Boolean;
       prevP        :TDouble2D;
       nowP         :TDouble2D;
     end;

  TForm3 = class(TForm)
    Timer1: TTimer;
    Force1: TCheckBox;
    Force2: TCheckBox;
    MG1range: TTrackBar;
    MG1curve: TTrackBar;
    Image1: TImage;
    Label1: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    MG2range: TTrackBar;
    MG2power: TTrackBar;
    Label6: TLabel;
    Force3: TCheckBox;
    Label2: TLabel;
    Label5: TLabel;
    Label7: TLabel;
    MFtimestep: TTrackBar;
    Label8: TLabel;
    MFpower: TTrackBar;
    procedure FormCreate(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure Image1MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Single);
    procedure Image1MouseUp(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Single);
    procedure Image1MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Single);
    procedure ForceCheckBox(Num :Integer);
    procedure Force1Change(Sender: TObject);
    procedure Force2Change(Sender: TObject);
    procedure Force3Change(Sender: TObject);
  private
    { private êÈåæ }
  public
    { public êÈåæ }
    _FluidSPH :TFluidSPH;
    M :TMouse;
    ForceType : array [1..CheckBoxNum] of TCheckBox;
    ForceCount :Integer;
    ForceCheck  :Integer;  //ëIëÇ≥ÇÍÇΩcheckbox
    Force3ms  :cardinal;

    ccount :Integer;
  end;

var
  Form3: TForm3;

implementation //############################################################### Å°

uses MMSystem;

{$R *.fmx}

//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& private

//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& public


//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&


procedure TForm3.FormCreate(Sender: TObject);
var
  i :Integer;
begin
     Image1.AutoCapture := True;
     Image1.Bitmap.SetSize( 800, 600 );

     M.Drag := false;

     _FluidSPH := TFluidSPH.Create;

     for i := 1 to CheckBoxNum do
       begin
        ForceType[i] := TCheckBox(FindComponent('Force' + IntToStr(i)));
       end;
     ForceCount := 0;
     ForceCheck := 0;


     ccount := 0;
end;


procedure TForm3.Force1Change(Sender: TObject);
begin
    ForceCount := 1;
    ForceCheckBox( 1 );
end;

procedure TForm3.Force2Change(Sender: TObject);
begin
    ForceCount := 2;
    ForceCheckBox( 2 );
end;

procedure TForm3.Force3Change(Sender: TObject);
begin
    ForceCount := 3;
    ForceCheckBox( 3 );
end;

procedure TForm3.ForceCheckBox(Num :Integer);
var
  i :Integer;
  c :Boolean;
begin

  if (ForceType[Num].IsChecked = true) and (ForceCount = Num) then
  begin
    ForceCheck := Num;
    for i := 1 to CheckBoxNum do
        if i <> Num then ForceType[i].IsChecked := false;
  end;

  c := false;
  for i := 1 to CheckBoxNum do  c := c or ForceType[i].IsChecked;
  if c = false then ForceCheck := 0;

end;


procedure TForm3.Image1MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Single);
begin
     M.prevP.X := X;
     M.prevP.Y := Y;
     M.nowP.X := X;
     M.nowP.Y := Y;
     M.Drag := true;
     if ForceCheck = 3 then
      begin
        Form3.Force3ms := timeGetTime;
      end;
end;

procedure TForm3.Image1MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Single);
begin
  if M.Drag = true then
    begin
     M.nowP.X := X;
     M.nowP.Y := Y;
    end;
end;

procedure TForm3.Image1MouseUp(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Single);
begin
      M.Drag := false;
      Force3ms := 0;
end;


procedure TForm3.Timer1Timer(Sender: TObject);
begin
      //label1.Text := 'M.nowP = ( ' + FloatToStr(M.nowP.X) + ', ' + FloatToStr(M.nowP.Y) + ')';
      //label1.Text := 'MouseType ' + IntToStr(ForceCheck) + '  ' + IntToStr(ForceCount);



     _FluidSPH.RegistParticles;

     //SPH
     _FluidSPH.CalcDens( 30 );
     _FluidSPH.CalcPres( 30 );
     _FluidSPH.CalcVisc( 30 );
     _FluidSPH.CalcMouse( 30 );
     //M.Drag := false;
     _FluidSPH.CalcForc;


     //PBF
     //_FluidSPH.PBCalcEXT( 30 );
     //_FluidSPH.RegistParticles;


     _FluidSPH.Draw( Image1.Bitmap.Canvas );
end;

end. //######################################################################### Å°
